{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_image__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","IndexPage","_ref","data","allMarkdownRemark","edges","map","_ref2","node","a","createElement","title","keywords","meta","id","className","frontmatter","heading","subheading","filename","alt","class","to","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","Image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","image","images","find","relativePath","childImageSharp","src","publicURL","imageSizes","sizes","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","_public_static_d_2351125363_json__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bodyScrollLock","disableBodyScroll","enableBodyScroll","MobileMenu","_this","_React$Component","call","this","state","menuOpen","handleStateChange","targetBody","document","querySelector","headroom","isOpen","classList","remove","add","setState","closeMenu","_this2","react_default","BurgerMenu","onStateChange","width","right","gatsby_browser_entry","onClick","Component","Header","siteTitle","dist_default","header_MobileMenu","components_image","Footer","method","data-netlify","data-netlify-honeypot","for","type","value","placeholder","href","Date","getFullYear","Layout","Fragment","components_header","components_footer","_755544856"],"mappings":"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","file":"component---src-pages-index-js-ae28debc5423bdc10f51.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby';\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport \"../styles/index.scss\"\n\nconst IndexPage = ({data}) => (\n  data.allMarkdownRemark.edges.map( ({ node }) => (\n  <Layout>\n    <SEO title=\"Gatsby Boilerplate\" keywords={[`Gatsby`, `Boilerplate`]} meta={[`Gatsby Boilerplate`]} />\n    <section id=\"hero\">\n      <div className=\"hero-container\">\n        <aside className=\"hero-text\">\n          <h2>{node.frontmatter.title}</h2>\n          <h1>{node.frontmatter.heading}</h1>\n          <p>{node.frontmatter.subheading}</p>\n          <Link>Start Here</Link>\n        </aside>\n        <aside className=\"hero-image\">\n          <Image filename={\"trending.svg\"} alt={\"description\"}/>\n        </aside>\n      </div>\n     \n    </section>\n\n    <section id=\"resources\">\n      <aside class = \"text-container\">\n            <h3>We Believe In Community</h3>\n            <h4>How can we help you succeed?</h4>\n            <h4>Check out these resources for new ideas, code references, and more.</h4>\n      </aside> \n      <aside className=\"resource-links\">\n          <div className=\"column\">\n            <div className=\"docs\">\n                <Link className=\"pricing\" to=\"/pricing\">Pricing</Link>\n            </div>\n            <div className=\"studies\">\n              <Link className=\"pricing\" to=\"/pricing\">Pricing</Link>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"contact\">\n                <Link className=\"pricing\" to=\"/pricing\">Pricing</Link>\n            </div>\n            <div className=\"blog\">\n              <Link className=\"pricing\" to=\"/pricing\">Pricing</Link>\n            </div>\n          </div>\n          <div className=\"get-started\">\n                <div className=\"tag-line\">\n                  <Link className=\"pricing\" to=\"/pricing\">Pricing</Link>\n                </div>\n          </div>\n      </aside>\n    </section>\n  </Layout>\n  ))\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fileAbsolutePath: {regex : \"/content\\/pages/\"} }){\n        edges {\n          node {\n            excerpt(pruneLength: 250)\n            id\n            frontmatter {\n              title\n              heading\n              subheading\n              image\n            }\n          }\n        }\n      }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Image = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              publicURL\n              childImageSharp {\n                sizes(maxWidth: 600) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n\n    render={(data) => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath === props.filename;\n      });\n\n      if (!image) {\n        return null;\n      }\n\n      const childImageSharp = image.node.childImageSharp;\n      if (!childImageSharp) {\n        return (<img className = {props.className} alt={props.alt} src={image.node.publicURL} />);\n      }\n      const imageSizes = image.node.childImageSharp.sizes;\n      return (\n        <Img className = {props.className}\n          alt={props.alt}\n          sizes={imageSizes}\n        />\n      );\n    }}\n  />\n)\nexport default Image;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\nimport { slide as Menu } from \"react-burger-menu\"\nimport Headroom from \"react-headroom\"\n\nimport \"../styles/components/header.scss\"\nimport \"../styles/components/mobileMenu.scss\"\n\nconst bodyScrollLock = require('body-scroll-lock');\nconst disableBodyScroll = bodyScrollLock.disableBodyScroll;\nconst enableBodyScroll = bodyScrollLock.enableBodyScroll;\n\nclass MobileMenu extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      menuOpen: false\n    }\n  }\n\n  handleStateChange (state) {\n    const targetBody = document.querySelector(\"body\");\n    const headroom = document.querySelector(\"#headroom\");\n    if(state.isOpen){\n      disableBodyScroll(targetBody);\n      headroom.classList.remove(\"headroom--unpinned\");\n      headroom.classList.add(\"headroom--unfixed\");\n      }else{\n      enableBodyScroll(targetBody);\n      headroom.classList.add(\"headroom--unpinned\");\n      headroom.classList.remove(\"headroom--unfixed\");\n    }\n    this.setState({menuOpen: state.isOpen})  \n  }\n\n  closeMenu () {\n    this.setState({menuOpen: false})\n  }\n\n  render() {\n    return (\n      <Menu  isOpen={this.state.menuOpen}\n      onStateChange={(state) => this.handleStateChange(state)} id={ \"mobileMenu\" } width={ '100%' } right>\n         <Link onClick={() => this.closeMenu()} className=\"features\" to=\"/about/\">About</Link>\n        <Link onClick={() => this.closeMenu()} className=\"pricing\" to=\"/services/\">Services</Link>\n        <Link onClick={() => this.closeMenu()} className=\"results\" to=\"/career/\">Career</Link>\n        <Link onClick={() => this.closeMenu()} className=\"how-it-works\" to=\"/blog/\">Blog</Link>\n        <Link onClick={() => this.closeMenu()} className=\"get-started\" to=\"/contact/\">Get Started</Link>\n      </Menu>\n    )\n  }\n}\n\nconst Header = ({ siteTitle }) => (\n  <Headroom id={\"headroom\"}>\n  <header id=\"navbar\">\n    <MobileMenu/>\n    <nav className=\"header-nav\">\n      <div className=\"header-logo-container\">\n        <Link to=\"/\">\n        <Image className=\"header-logo\" filename={\"gatsby-logo.svg\"} >\n         {siteTitle}\n        </Image>\n        </Link>\n      </div>\n      <div className=\"header-menu-container\">\n          <Link className=\"features\" to=\"/about/\">About</Link>\n          <Link className=\"pricing\" to=\"/services/\">Services</Link>\n          <Link className=\"results\" to=\"/career/\">Career</Link>\n          <Link className=\"how-it-works\" to=\"/blog/\">Blog</Link>\n          <Link className=\"get-started\" to=\"/contact/\">Get Started</Link>\n      </div>\n    </nav>\n  </header>\n  </Headroom>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Image from \"../components/image\"\nimport \"../styles/components/footer.scss\"\n\nconst Footer = () => (\n  <footer className=\"hr hr--top\">\n    <div className=\"logo\">\n        <Link to=\"/\">\n          <Image filename={\"gatsby-dark.svg\"} alt={\"description\"}/>\n        </Link>\n    </div>\n    <form name=\"contact\" class=\"contact\" method=\"post\" data-netlify=\"true\" data-netlify-honeypot=\"bot-field\">\n    <label for =\"sign-up\"> </label>\n    <input type=\"hidden\" name=\"sign-up\" value=\"contact\" />\n        <p>Sign Up To Receive The Latest Updates</p>\n        <div className=\"sign-up\">\n            <input type=\"email\" name=\"email\" placeholder=\"Email\"/>\n            <button type=\"submit\">Send</button>\n        </div>\n    </form>\n    <div className=\"footerMenu\">\n          <Link className=\"features\" to=\"/about/\">About</Link>\n          <Link className=\"pricing\" to=\"/services/\">Services</Link>\n          <Link className=\"results\" href=\"/career/\">Career</Link>\n          <Link className=\"resources\" to=\"/blog/\">Blog</Link>\n          <Link className=\"get-started\" to=\"/contact/\">Get Started</Link>\n    </div>\n    <div className=\"copyright\">\n      © {new Date().getFullYear()}, Built with\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        &\n        <a href=\"https://www.netlify.com\">Netlify</a>\n        &\n        <a href=\"https://undraw.co/illustrations\">UnDraw</a>\n    </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../styles/components/layout.scss\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n          <main>{children}</main>\n        <Footer siteTitle={data.site.siteMetadata.title} />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}